{"version":3,"sources":["src/app/app.component.html","src/app/dependent-details/dependent-details.component.html","src/app/employee-details/employee-details.component.html","src/app/fetch-employeebenfits-cost/fetch-employeebenfits-cost.component.html","src/app/home/home.component.html","src/app/nav-menu/nav-menu.component.html","src/$_lazy_route_resource lazy namespace object","src/app/Models/Employee.ts","src/app/Services/EmployeeBenfits.Service.ts","src/app/app.component.ts","src/app/app.module.ts","src/app/dependent-details/dependent-details.component.ts","src/app/employee-details/employee-details.component.ts","src/app/fetch-employeebenfits-cost/fetch-employeebenfits-cost.component.ts","src/app/home/home.component.ts","src/app/material.module.ts","src/app/nav-menu/nav-menu.component.css","src/app/nav-menu/nav-menu.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\n  <app-nav-menu></app-nav-menu>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</body>\\n\"","export default \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title></title>\\n</head>\\n<body>\\n\\n</body>\\n</html>\\n\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h5 class=\\\"card-header\\\">Angular 8 Reactive Form Validation</h5>\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"employeeRegisterForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Employee ID</label>\\n                <input type=\\\"number\\\" formControlName=\\\"employeeId\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.employeeId.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.employeeId.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.employeeId.errors.required\\\">employeeId is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-5\\\">\\n                    <label>First Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-5\\\">\\n                    <label>Last Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>DOB</label>\\n                <input type=\\\"text\\\" formControlName=\\\"dob\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.dob.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.dob.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.dob.errors.required\\\">DOB is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Dependents Count</label>\\n                <input type=\\\"number\\\" formControlName=\\\"dependentsCount\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.dependentsCount.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.dependentsCount.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.dependentsCount.errors.required\\\">dependentsCount is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-1\\\">Register</button>\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card m-3\\\">\\n    <h5 class=\\\"card-header\\\">Angular 8 Reactive Form Validation</h5>\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"fetchBenfitsForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-5\\\">\\n                    <label>Full Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"fullName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.fullName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.fullName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.fullName.errors.required\\\">Full Name is required</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"submitted\\\">\\n                <div>Total Cost: {{benfits.benfitsCosts}}</div>\\n                <div>No Of Dependents: {{benfits.dependentsCount}} </div>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-1\\\">Submit</button>\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>\\n<ul>\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\n</ul>\\n<p>To help you get started, we've also set up:</p>\\n<ul>\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\n</ul>\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\n\"","export default \"<header>\\n  <nav\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\n  >\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">EmployeeBenfits</a>\\n      <button\\n        class=\\\"navbar-toggler\\\"\\n        type=\\\"button\\\"\\n        data-toggle=\\\"collapse\\\"\\n        data-target=\\\".navbar-collapse\\\"\\n        aria-label=\\\"Toggle navigation\\\"\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\n        (click)=\\\"toggle()\\\"\\n      >\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\n      >\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\n          <li\\n            class=\\\"nav-item\\\"\\n            [routerLinkActive]=\\\"['link-active']\\\"\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n          >\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/employee-details']\\\"\\n              >Employee Details</a\\n            >\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-employeebenfits-cost']\\\"\\n              >Fetch Employee Benfits</a\\n            >\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Employee {\n  employeeId: number;\n  firstName: string;\n  lastName: string;\n  dob: string;\n  phoneNumber: string;\n  addressLine: string;\n  city: string;\n  province: string;\n  country: string;\n  zipcode: string;\n  dependentsCount: number;\n}","import { Inject, Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BenfitDetails } from '../Models/BenfitDetails';\nimport { Employee } from '../Models/Employee';\n\n@Injectable()\nexport class EmployeeBenfitsService {\n  private baseUrl: string;\n  employee: Employee;\n  constructor(private http: Http, @Inject('BASE_URL') baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  getEmployees(): Observable<any[]> {\n    return this.http.get(this.baseUrl + 'api/employeebenfits')\n      .pipe(map((response: any) => response.json()));\n  }\n\n  getBenfitsCost(employeeId): Observable<any> {\n    return this.http.get(this.baseUrl + 'api/employeebenfits/' + employeeId)\n      .pipe(map((response: any) => response.json()));\n  }\n\n  postEmployee(employee: Object): Observable<Object> {\n    return this.http.post(this.baseUrl + 'api/employeebenfits', employee);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { DependentDetailsComponent } from './dependent-details/dependent-details.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { FetchEmployeeBenfitsCostComponent } from './fetch-employeebenfits-cost/fetch-employeebenfits-cost.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EmployeeBenfitsService } from './Services/EmployeeBenfits.Service';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    DependentDetailsComponent,\n    EmployeeDetailsComponent,\n    FetchEmployeeBenfitsCostComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'employee-details', component: EmployeeDetailsComponent },\n      { path: 'fetch-employeebenfits-cost', component: FetchEmployeeBenfitsCostComponent },\n    ]),\n    NoopAnimationsModule\n  ],\n  providers: [EmployeeBenfitsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dependent-details',\n  templateUrl: './dependent-details.component.html'\n})\nexport class DependentDetailsComponent {\n\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../Models/Employee';\nimport { EmployeeBenfitsService } from '../Services/EmployeeBenfits.Service';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html'\n})\nexport class EmployeeDetailsComponent implements OnInit {\n  employee: Employee;\n  employeeRegisterForm: FormGroup;\n  submitted = false;\n  constructor(private service: EmployeeBenfitsService, private formbuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.employeeRegisterForm = this.formbuilder.group({\n      employeeId: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      dob: [''],\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n      addressLine: [''],\n      city: [''],\n      province: [''],\n      state: [''],\n      zipCode: ['', [Validators.required, Validators.pattern(\"^[0-9]\")]],\n      dependentsCount: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.employeeRegisterForm.controls; }\n\n  save() {\n    this.service\n      .postEmployee(this.employee).subscribe(data => {\n        console.log(data)\n        this.employee = new Employee();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    //stop here if form is invalid\n    //if (this.employeeRegisterForm.invalid) {\n    //  return;\n    //} else {\n      this.employee = this.employeeRegisterForm.value;\n      this.save();\n    //}\n  }\n\n  onReset() {\n    this.submitted = false;\n    this.employeeRegisterForm.reset();\n  }\n\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../Models/Employee';\nimport { EmployeeBenfitsService } from '../Services/EmployeeBenfits.Service';\nimport { StringLiteral } from 'typescript';\nimport { BenfitDetails } from '../Models/BenfitDetails';\n\n@Component({\n  selector: 'app-fetch-employeebenfits-costs',\n  templateUrl: './fetch-employeebenfits-cost.component.html'\n})\nexport class FetchEmployeeBenfitsCostComponent implements OnInit {\n  employee: Employee[];\n  benfits: BenfitDetails;\n  employeeId: number;\n  submitted = false;\n  fetchBenfitsForm: FormGroup;\n  constructor(private service: EmployeeBenfitsService, private formbuilder: FormBuilder) {  }\n\n  ngOnInit() {\n    this.fetchBenfitsForm = this.formbuilder.group({\n      fullName: ['', Validators.required],\n    });\n    this.service.getEmployees()\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n  get f() { return this.fetchBenfitsForm.controls; }\n\n  onSubmit() {\n    //stop here if form is invalid\n    if (this.fetchBenfitsForm.invalid) {\n      return;\n    } else {\n      this.employee.forEach(e => {\n        if (e.firstName.toLowerCase() == this.fetchBenfitsForm.value.fullName.split(\" \")[0] && e.lastName.toLowerCase() == this.fetchBenfitsForm.value.fullName.split(\" \")[1]) {\n          this.employeeId = e.employeeId;\n        }\n      });\n      this.service.getBenfitsCost(this.employeeId)\n        .subscribe(data => {\n          console.log(data)\n          this.benfits = data;\n          this.submitted = true;\n        }, error => console.log(error));\n    }\n  }\n\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ]\n})\n\nexport class MaterialModule { }","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}