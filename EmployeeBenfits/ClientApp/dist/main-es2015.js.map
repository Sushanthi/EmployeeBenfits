{"version":3,"sources":["./src/app/app.component.html","./src/app/dependent-details/dependent-details.component.html","./src/app/employee-details/employee-details.component.html","./src/app/fetch-employeebenfits-cost/fetch-employeebenfits-cost.component.html","./src/app/home/home.component.html","./src/app/nav-menu/nav-menu.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/Models/Employee.ts","./src/app/Services/EmployeeBenfits.Service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dependent-details/dependent-details.component.ts","./src/app/employee-details/employee-details.component.ts","./src/app/fetch-employeebenfits-cost/fetch-employeebenfits-cost.component.ts","./src/app/home/home.component.ts","./src/app/material.module.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,+L;;;;;;;;;;;;ACAf;AAAe,8L;;;;;;;;;;;;ACAf;AAAe,6cAA8Y,iDAAiD,geAAge,gDAAgD,scAAsc,+CAA+C,0bAA0b,0CAA0C,iaAAia,sDAAsD,khB;;;;;;;;;;;;ACA94E;AAAe,2fAA4b,+CAA+C,uVAAuV,sBAAsB,iDAAiD,yBAAyB,gT;;;;;;;;;;;;ACAj7B;AAAe,uhD;;;;;;;;;;;;ACAf;AAAe,8vBAA+rB,mBAAmB,sMAAsM,cAAc,koB;;;;;;;;;;;ACAr7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;ACZO,MAAM,QAAQ;CAYpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZkD;AACJ;AAEV;AAKrC,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAGjC,YAAoB,IAAU,EAAsB,OAAe;QAA/C,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;aACvD,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,cAAc,CAAC,UAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,sBAAsB,GAAG,UAAU,CAAC;aACrE,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,QAAQ,CAAC,CAAC;IACxE,CAAC;CACF;;YAjB2B,kDAAI;yCAAG,oDAAM,SAAC,UAAU;;AAHvC,sBAAsB;IADlC,gEAAU,EAAE;IAIsB,uEAAM,CAAC,UAAU,CAAC;qCAAzB,kDAAI;GAHnB,sBAAsB,CAoBlC;AApBkC;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AAM1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAJzB;QAKE,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IAJxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,mKAAmC;KACpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiC;AACjB;AACI;AAC8B;AAChC;AACI;AAEA;AACkB;AACX;AAEsC;AACH;AAC6B;AACjE;AAEuB;AACA;AACzB;AA4BnD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IA1BrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,6EAAgB;YAChB,kEAAa;YACb,wGAAyB;YACzB,sGAAwB;YACxB,mIAAiC;SAClC;QACD,OAAO,EAAE;YACP,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;YACjE,qEAAgB;YAChB,0DAAW;YACX,wDAAU;YACV,kEAAmB;YACnB,gEAAc;YACd,4DAAY,CAAC,OAAO,CAAC;gBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE,SAAS,EAAE,MAAM,EAAE;gBACzD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sGAAwB,EAAE;gBACjE,EAAE,IAAI,EAAE,4BAA4B,EAAE,SAAS,EAAE,mIAAiC,EAAE;aACrF,CAAC;YACF,0FAAoB;SACrB;QACD,SAAS,EAAE,CAAC,yFAAsB,CAAC;QACnC,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AC9C4B;AAOlD,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;CAErC;AAFY,yBAAyB;IAJrC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,iNAAiD;KAClD,CAAC;GACW,yBAAyB,CAErC;AAFqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPoB;AAEU;AACtB;AAC+B;AAM7E,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAInC,YAAoB,OAA+B,EAAU,WAAwB;QAAjE,YAAO,GAAP,OAAO,CAAwB;QAAU,gBAAW,GAAX,WAAW,CAAa;QADrF,cAAS,GAAG,KAAK,CAAC;IACuE,CAAC;IAE1F,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACzF,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEtD,IAAI;QACF,IAAI,CAAC,OAAO;aACT,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAQ,EAAE,CAAC;QACjC,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,8BAA8B;QAC9B,0CAA0C;QAC1C,WAAW;QACX,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,GAAG;IACL,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;CAEF;;YA7C8B,wFAAsB;YAAuB,0DAAW;;AAJ1E,wBAAwB;IAJpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,8MAAgD;KACjD,CAAC;qCAK6B,wFAAsB,EAAuB,0DAAW;GAJ1E,wBAAwB,CAiDpC;AAjDoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVqB;AAEU;AAES;AAQ7E,IAAa,iCAAiC,GAA9C,MAAa,iCAAiC;IAM5C,YAAoB,OAA+B,EAAU,WAAwB;QAAjE,YAAO,GAAP,OAAO,CAAwB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAFrF,cAAS,GAAG,KAAK,CAAC;IAEwE,CAAC;IAE3F,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;aACxB,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAElD,QAAQ;QACN,8BAA8B;QAC9B,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACjC,OAAO;SACR;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACxB,IAAI,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;oBACrK,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC;iBACzC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;SACnC;IACH,CAAC;CAEF;;YAjC8B,wFAAsB;YAAuB,0DAAW;;AAN1E,iCAAiC;IAJ7C,+DAAS,CAAC;QACT,QAAQ,EAAE,iCAAiC;QAC3C,4OAA0D;KAC3D,CAAC;qCAO6B,wFAAsB,EAAuB,0DAAW;GAN1E,iCAAiC,CAuC7C;AAvC6C;;;;;;;;;;;;;;;;;;;;;;;;;ACZJ;AAM1C,IAAa,aAAa,GAA1B,MAAa,aAAa;CACzB;AADY,aAAa;IAJzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0KAAoC;KACrC,CAAC;GACW,aAAa,CACzB;AADyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AAkCd;AAuE3B,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IArE1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,uEAAqB;YACrB,iEAAe;YACf,uEAAqB;YACrB,+DAAa;YACb,mEAAiB;YACjB,gEAAc;YACd,qEAAmB;YACnB,iEAAe;YACf,oEAAkB;YAClB,mEAAiB;YACjB,+DAAa;YACb,gEAAc;YACd,+DAAa;YACb,+DAAa;YACb,qEAAmB;YACnB,oEAAkB;YAClB,sEAAoB;YACpB,0EAAwB;YACxB,gEAAc;YACd,iEAAe;YACf,iEAAe;YACf,kEAAgB;YAChB,iEAAe;YACf,sEAAoB;YACpB,mEAAiB;YACjB,+DAAa;YACb,gEAAc;YACd,+DAAa;YACb,kEAAgB;YAChB,kEAAgB;YAChB,kEAAgB;SACjB;QACD,OAAO,EAAE;YACP,uEAAqB;YACrB,iEAAe;YACf,uEAAqB;YACrB,+DAAa;YACb,mEAAiB;YACjB,gEAAc;YACd,qEAAmB;YACnB,iEAAe;YACf,oEAAkB;YAClB,mEAAiB;YACjB,+DAAa;YACb,gEAAc;YACd,+DAAa;YACb,+DAAa;YACb,qEAAmB;YACnB,oEAAkB;YAClB,sEAAoB;YACpB,0EAAwB;YACxB,gEAAc;YACd,iEAAe;YACf,iEAAe;YACf,kEAAgB;YAChB,iEAAe;YACf,sEAAoB;YACpB,mEAAiB;YACjB,+DAAa;YACb,gEAAc;YACd,+DAAa;YACb,kEAAgB;YAChB,kEAAgB;YAChB,kEAAgB;SACjB;KACF,CAAC;GAEW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;ACzG3B;AAAe,gFAAiB,wBAAwB,uBAAuB,0BAA0B,GAAG,UAAU,oBAAoB,GAAG,+BAA+B,UAAU,sBAAsB,KAAK,GAAG,iBAAiB,mDAAmD,GAAG,+CAA+C,mvB;;;;;;;;;;;;;;;;;;;;;;;;ACAhS;AAO1C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAL7B;QAME,eAAU,GAAG,KAAK,CAAC;IASrB,CAAC;IAPC,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;CACF;AAVY,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,sLAAwC;;KAEzC,CAAC;GACW,gBAAgB,CAU5B;AAV4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;;;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAElD,SAAS,UAAU;IACxB,OAAO,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC;AAED,MAAM,SAAS,GAAG;IAChB,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;CAC1D,CAAC;AAEF,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,yDAAS,CAAC;KACzD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["export default \"<body>\\n  <app-nav-menu></app-nav-menu>\\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</body>\\n\"","export default \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\" />\\n    <title></title>\\n</head>\\n<body>\\n\\n</body>\\n</html>\\n\\n\"","export default \"<div class=\\\"card m-3\\\">\\n    <h5 class=\\\"card-header\\\">Angular 8 Reactive Form Validation</h5>\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"employeeRegisterForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Employee ID</label>\\n                <input type=\\\"number\\\" formControlName=\\\"employeeId\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.employeeId.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.employeeId.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.employeeId.errors.required\\\">employeeId is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-5\\\">\\n                    <label>First Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-5\\\">\\n                    <label>Last Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>DOB</label>\\n                <input type=\\\"text\\\" formControlName=\\\"dob\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.dob.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.dob.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.dob.errors.required\\\">DOB is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Dependents Count</label>\\n                <input type=\\\"number\\\" formControlName=\\\"dependentsCount\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.dependentsCount.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.dependentsCount.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.dependentsCount.errors.required\\\">dependentsCount is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-1\\\">Register</button>\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card m-3\\\">\\n    <h5 class=\\\"card-header\\\">Angular 8 Reactive Form Validation</h5>\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"fetchBenfitsForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-5\\\">\\n                    <label>Full Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"fullName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.fullName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.fullName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.fullName.errors.required\\\">Full Name is required</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"submitted\\\">\\n                <div>Total Cost: {{benfits.benfitsCosts}}</div>\\n                <div>No Of Dependents: {{benfits.dependentsCount}} </div>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <button class=\\\"btn btn-primary mr-1\\\">Submit</button>\\n                <button class=\\\"btn btn-secondary\\\" type=\\\"reset\\\" (click)=\\\"onReset()\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>\\n<ul>\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\n</ul>\\n<p>To help you get started, we've also set up:</p>\\n<ul>\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\n</ul>\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\n\"","export default \"<header>\\n  <nav\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\n  >\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">EmployeeBenfits</a>\\n      <button\\n        class=\\\"navbar-toggler\\\"\\n        type=\\\"button\\\"\\n        data-toggle=\\\"collapse\\\"\\n        data-target=\\\".navbar-collapse\\\"\\n        aria-label=\\\"Toggle navigation\\\"\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\n        (click)=\\\"toggle()\\\"\\n      >\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\n      >\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\n          <li\\n            class=\\\"nav-item\\\"\\n            [routerLinkActive]=\\\"['link-active']\\\"\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n          >\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/employee-details']\\\"\\n              >Employee Details</a\\n            >\\n          </li>\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-employeebenfits-cost']\\\"\\n              >Fetch Employee Benfits</a\\n            >\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</header>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Employee {\n  employeeId: number;\n  firstName: string;\n  lastName: string;\n  dob: string;\n  phoneNumber: string;\n  addressLine: string;\n  city: string;\n  province: string;\n  country: string;\n  zipcode: string;\n  dependentsCount: number;\n}","import { Inject, Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BenfitDetails } from '../Models/BenfitDetails';\nimport { Employee } from '../Models/Employee';\n\n@Injectable()\nexport class EmployeeBenfitsService {\n  private baseUrl: string;\n  employee: Employee;\n  constructor(private http: Http, @Inject('BASE_URL') baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  getEmployees(): Observable<any[]> {\n    return this.http.get(this.baseUrl + 'api/employeebenfits')\n      .pipe(map((response: any) => response.json()));\n  }\n\n  getBenfitsCost(employeeId): Observable<any> {\n    return this.http.get(this.baseUrl + 'api/employeebenfits/' + employeeId)\n      .pipe(map((response: any) => response.json()));\n  }\n\n  postEmployee(employee: Object): Observable<Object> {\n    return this.http.post(this.baseUrl + 'api/employeebenfits', employee);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { DependentDetailsComponent } from './dependent-details/dependent-details.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { FetchEmployeeBenfitsCostComponent } from './fetch-employeebenfits-cost/fetch-employeebenfits-cost.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EmployeeBenfitsService } from './Services/EmployeeBenfits.Service';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    DependentDetailsComponent,\n    EmployeeDetailsComponent,\n    FetchEmployeeBenfitsCostComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'employee-details', component: EmployeeDetailsComponent },\n      { path: 'fetch-employeebenfits-cost', component: FetchEmployeeBenfitsCostComponent },\n    ]),\n    NoopAnimationsModule\n  ],\n  providers: [EmployeeBenfitsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dependent-details',\n  templateUrl: './dependent-details.component.html'\n})\nexport class DependentDetailsComponent {\n\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../Models/Employee';\nimport { EmployeeBenfitsService } from '../Services/EmployeeBenfits.Service';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html'\n})\nexport class EmployeeDetailsComponent implements OnInit {\n  employee: Employee;\n  employeeRegisterForm: FormGroup;\n  submitted = false;\n  constructor(private service: EmployeeBenfitsService, private formbuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.employeeRegisterForm = this.formbuilder.group({\n      employeeId: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      dob: [''],\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\n      addressLine: [''],\n      city: [''],\n      province: [''],\n      state: [''],\n      zipCode: ['', [Validators.required, Validators.pattern(\"^[0-9]\")]],\n      dependentsCount: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.employeeRegisterForm.controls; }\n\n  save() {\n    this.service\n      .postEmployee(this.employee).subscribe(data => {\n        console.log(data)\n        this.employee = new Employee();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    //stop here if form is invalid\n    //if (this.employeeRegisterForm.invalid) {\n    //  return;\n    //} else {\n      this.employee = this.employeeRegisterForm.value;\n      this.save();\n    //}\n  }\n\n  onReset() {\n    this.submitted = false;\n    this.employeeRegisterForm.reset();\n  }\n\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from '../Models/Employee';\nimport { EmployeeBenfitsService } from '../Services/EmployeeBenfits.Service';\nimport { StringLiteral } from 'typescript';\nimport { BenfitDetails } from '../Models/BenfitDetails';\n\n@Component({\n  selector: 'app-fetch-employeebenfits-costs',\n  templateUrl: './fetch-employeebenfits-cost.component.html'\n})\nexport class FetchEmployeeBenfitsCostComponent implements OnInit {\n  employee: Employee[];\n  benfits: BenfitDetails;\n  employeeId: number;\n  submitted = false;\n  fetchBenfitsForm: FormGroup;\n  constructor(private service: EmployeeBenfitsService, private formbuilder: FormBuilder) {  }\n\n  ngOnInit() {\n    this.fetchBenfitsForm = this.formbuilder.group({\n      fullName: ['', Validators.required],\n    });\n    this.service.getEmployees()\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n  get f() { return this.fetchBenfitsForm.controls; }\n\n  onSubmit() {\n    //stop here if form is invalid\n    if (this.fetchBenfitsForm.invalid) {\n      return;\n    } else {\n      this.employee.forEach(e => {\n        if (e.firstName.toLowerCase() == this.fetchBenfitsForm.value.fullName.split(\" \")[0] && e.lastName.toLowerCase() == this.fetchBenfitsForm.value.fullName.split(\" \")[1]) {\n          this.employeeId = e.employeeId;\n        }\n      });\n      this.service.getBenfitsCost(this.employeeId)\n        .subscribe(data => {\n          console.log(data)\n          this.benfits = data;\n          this.submitted = true;\n        }, error => console.log(error));\n    }\n  }\n\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ]\n})\n\nexport class MaterialModule { }","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}